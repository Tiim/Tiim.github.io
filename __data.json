{"type":"data","nodes":[{"type":"data","data":[{"footer":1},{"html":2,"slug":3,"uuid":4,"created":5,"date":6,"published":7,"abstract":8,"tags":9,"links":-1,"type":10,"cover_image":-1,"description":11,"folder":12},"\u003Cp>Built with SvelteKit and hosted on GitHub Pages.\u003C/p>\n\u003Cp>View this website on \u003Ca href=\"https://github.com/Tiim/Tiim.github.io\" rel=\"nofollow noopener noreferrer\">GitHub\u003C/a>!\u003C/p>\n\u003Ch2>Other pages\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://tiim.ch/pages/links\" rel=\"nofollow noopener noreferrer\">Links and Blogroll\u003C/a>\u003C/li>\n\u003C/ul>","footer","e556fd14-3acd-4a7b-9b31-929fdd6d2b7a",["Date","2023-07-31T20:16:19.000Z"],["Date","2023-07-31T20:16:19.000Z"],true,"\u003Cp>Built with SvelteKit and hosted on GitHub Pages.\u003C/p>",[],"article","","metadata"],"uses":{}},{"type":"data","data":[{"indexMeta":1,"mf2":13,"recent":26},{"html":2,"slug":3,"uuid":4,"date":5,"created":6,"published":7,"abstract":8,"tags":9,"links":-1,"type":10,"cover_image":-1,"description":11,"folder":12},"\u003Ch1>Hey, I'm \u003Cspan class=\"p-given-name\">Tim\u003C/span> 😊\u003C/h1>\n\u003Cp>\u003Cstrong>I'm a \u003Cspan class=\"p-role\">master graduate in computer science\u003C/span> at the \u003Cspan class=\"p-org\">University of Basel\u003C/span>, swim coach and swimmer in \u003Cspan class=\"p-country-name\">Switzerland\u003C/span>.\u003C/strong>\u003C/p>\n\u003Cp>🏊‍♂️💻🏋️‍♂️\u003C/p>","index","43aca391-125a-4fd3-a238-8916f41920d2",["Date","2022-11-03T00:00:00.000Z"],["Date","2022-11-03T17:06:03.000Z"],true,"\u003Cp>\u003Cstrong>I'm a {{role}} at the {{org}}, swim coach and swimmer in {{country_name}}.\u003C/strong>\u003C/p>",[],"article","","metadata",{"name":14,"given_name":15,"family_name":16,"nickname":17,"email":18,"photo":19,"url":20,"locality":21,"country_name":22,"org":23,"job_title":11,"role":24,"gender_identity":25},"Tim Bachmann","Tim","Bachmann","Tiim","hey@tiim.ch","https://media.tiim.ch/tiim.jpg","https://tiim.ch/","Basel","Switzerland","University of Basel","master graduate in computer science","male",[27,48,65,81,99,124],{"html":28,"slug":29,"uuid":30,"date":31,"created":32,"aliases":33,"title":34,"published":7,"modified":33,"description":35,"cover_image":36,"cover_image_txt":37,"content_tags":38,"abstract":43,"tags":44,"links":-1,"type":10,"folder":45,"comments":46,"latestComment":47},"\u003Cblockquote class=\"callout callout-note\">\n\u003Cspan class=\"callout-title\">\u003Cspan class=\"callout-icon\">\u003Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\u003Cpath d=\"M64 32C28.7 32 0 60.7 0 96v320c0 35.3 28.7 64 64 64h226.7c17 0 33.3-6.7 45.3-18.7l93.3-93.3c12-12 18.7-28.3 18.7-45.3V96c0-35.3-28.7-64-64-64H64zm0 64h320v224h-64c-17.7 0-32 14.3-32 32v64H64V96z\">\u003C/path>\u003C/svg>\u003C/span>Note\u003C/span>\u003Cp>This post is meant as a reference for myself. I only published it in case someone else might find it interesting.\nI did not spend much time on this post.\u003C/p>\n\u003C/blockquote>\n\u003Cp>I do host some services on a few rented VPS servers and on my \"home lab\", which is just an old desktop that is running in the basement.\nWhen I got into self-hosting, I decided I would host everything exclusively in docker, which has served me pretty well over the last few years. In the last while I\nhave learned a lot about Kubernetes, and am strongly considering switching my \"simple\" hosting setup for a more complex Kubernetes cluster. So before I do that I want\nto write down what my current setup looks like.\u003C/p>\n\u003Ch2>Setup\u003C/h2>\n\u003Cp>\u003Cimg src=\"https://media.tiim.ch/0887e318-9359-4753-abaf-49ae7c26dfcd.webp\" alt=\"\">\u003C/p>\n\u003Cp>As mentioned, everything is hosted in docker containers. Generally, I try to keep everything in docker-compose, since this allows me to specify the settings of the container once, and easily modify it later.\nTo have multiple services available on port 80 and 443, I use the Traeffik (Software) reverse proxy. I use Traefik without a config file, meaning it pulls the routes and rules directly from the labels of the\nrunning containers on the VPS. This makes it easy to launch a new service and have its reverse proxy config directly in the docker-compose file.\u003C/p>\n\u003Cp>Since many services use a database, and Postgres seems to be supported by many open-source projects, I decided to have a central Postgres instance running in a docker container. This allows me to\nback it up with a simple cron job in a single place. If a service does not support Postgres, I specify its database directly in the docker-compose file.\u003C/p>\n\u003Cp>Almost all services use disk access for either config, local files, or similar. I do have a docker folder that is the root of all locally stored files.\u003C/p>\n\u003Ch2>OS Setup\u003C/h2>\n\u003Cp>When I first started, I configured everything by hand, and documented how, why, and what I did. However I was not happy with this, I could not test it out and it was prone to errors.\nTherefore, I decided to use Ansible to set up the server and install all dependencies.\nThis worked well, so well that I decided that Ansible was good enough to use to operate the entire pipeline, even to automate the deployment of the services.\u003C/p>\n\u003Ch2>Deployment\u003C/h2>\n\u003Cp>I do have an ansible role per service, with its configuration (mostly) as ansible YAML files, and the docker-compose files and other config files as ansible templates. This worked great, with a single ansible-playbook command I can\nmake sure everything is running and has the right config.\nFor most services, I even built logic to make sure that when the docker-compose file or a config file changes, the container is restarted.\u003C/p>\n\u003Ch2>The good parts\u003C/h2>\n\u003Cp>I am quite happy with this system in general. Everything runs stable, backups are easy and automated, and deployments for services that are already configured are a breeze.\nI can keep the whole \"description\" of what is running in a single git repo, and make changes by editing config files.\nThis is a huge step up from manually deploying and keeping track of what docker commands to use for what service.\u003C/p>\n\u003Ch2>The not so good parts\u003C/h2>\n\u003Cp>Recently I noticed some pain points.\u003C/p>\n\u003Col>\n\u003Cli>If I want to deploy a service twice for two domain names, I have to create a copy of the role. This unfortunately leads to duplicated \"code\" which can (and does) lead to configuration drift.\u003C/li>\n\u003Cli>I have to code things myself that already exist. For example, restarting a container when a config value changes. For most services this is implemented, but not everywhere, and also not for all possible things that can be changed. This is not what I want to be concentrating on if I am writing the config to deploy a service.\u003C/li>\n\u003C/ol>\n\u003Cp>In general, I seem to have built a worse subset of Kubernetes myself, just without the robustness that makes Kubernetes so interesting.\u003C/p>\n\u003Ch2>My plan for the future\u003C/h2>\n\u003Cp>I am planning to replace docker with Kubernetes, specifically K3s (Software), a very lightweight and mostly \"batteries included\" Kubernetes distribution.\nAnsible will stay, but only as a tool to set up and configure the OS, install dependencies, and install and run K3S. Deployment of services I either want to do directly using the kubectl command line tool, or more likely using\nArgoCD, a project that pulls Kubernetes manifests from a Git repository and automatically deploys it.\u003C/p>\n\u003Cp>For the configuration, I will take a look at Helm (Software).\u003C/p>","blog/2023-12-03-my-selfhosting-setup","3af67a63-5f3a-422c-8aee-5e3daa8921f9",["Date","2023-12-04T08:00:00.000Z"],["Date","2023-12-03T21:08:16.000Z"],null,"My Selfhosting Setup","A short overview on how I self-host.","https://media.tiim.ch/4a0a43eb-cf95-4273-b6a6-e085c9123985.webp","Model: realvisxlV20_v20Bakedvae; beach sunset, palms, calm ocean, fine sand, cinematic shot, photorealistic ## (worst quality)",[39,40,41,42],"ansible","docker","traefik","server","\u003Cp>[!NOTE]\nThis post is meant as a reference for myself. I only published it in case someone else might find it interesting.\nI did not spend much time on this post.\u003C/p>",[39,40,42,41],"blog",[],"2024-01-20T09:36:14Z",{"html":49,"slug":50,"uuid":51,"date":52,"created":53,"aliases":33,"title":54,"published":7,"modified":33,"description":55,"cover_image":56,"cover_image_txt":57,"content_tags":58,"abstract":62,"tags":63,"links":-1,"type":10,"folder":45,"comments":64,"latestComment":47},"\u003Cp>I recently had to find a way to delete a folder using Ansible that was being created by Docker. The folder had a path like \u003Ccode>~/docker/myservice\u003C/code>. Since docker had created it as part of a volume, the folder did not belong to the current user. So deleting the folder using normal permissions failed.\u003C/p>\n\u003Cp>Deleting with elevated permission on the command line is easy: The command \u003Ccode>sudo rm -rf ~/docker/myservice\u003C/code> performs the \u003Ccode>rm\u003C/code> operation as the root user. In bash, this will delete the \u003Ccode>docker/myservice\u003C/code> folder in the user's home directory, but when doing the equivalent in Ansible, this won't work!\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-yaml\"># This does not work!\n- name: Delete the folder using root permissions\n  become: true\n  ansible.builtin.file:\n    path: \"~/docker/myservice\"\n    state: \"absent\"\n\u003C/code>\u003C/pre>\n\u003Cp>This code will try to delete the file \u003Ccode>/user/root/docker/myservice\u003C/code>, which is not what we wanted.\u003C/p>\n\u003Cp>The bash version works because the shell first resolves the tilde in the argument to the current users' directory before calling the sudo command. In Ansible, we first switch to the root user and only then the tilde is resolved: this time to the home directory of the root user.\u003C/p>\n\u003Cp>To circumvent this, we can manually resolve the path to an absolute path. Unfortunately, I have not found a straightforward way to do this in Ansible, however the bash command \u003Ccode>readlink -f &#x3C;path>\u003C/code> does exactly this. To use it in Ansible, we can use the following configuration:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-yaml\">- name: Get absolute folder path\n  ansible.builtin.command:\n    cmd: \"readlink -f ~/docker/myservice\"\n  register: folder_abs\n  changed_when: False\n\n- name: Debug\n  debug:\n    msg: \"{{folder_abs.stdout}}\" # prints /user/tim/docker/myservice\n\n- name: Delete the folder using root permissions\n  become: true\n  ansible.builtin.file:\n    path: \"{{folder_abs.stdout}}\"\n    state: \"absent\"\n\u003C/code>\u003C/pre>\n\u003Cp>With this Ansible script, we manually resolve the absolute path and use it to delete the folder using root permissions. If you know of an easier way to resolve to an absolute path, please let me know!\u003C/p>","blog/2023-09-20-ansible-absolute-path","ad58acaf-56b0-4bcf-9b72-d6c054fc48d4",["Date","2023-09-20T21:39:13.000Z"],["Date","2023-09-20T20:22:35.634Z"],"Getting the Absolute Path of a Remote Directory in Ansible","There is no builtin way to convert a relative path to an absolute path in ansible. However we can use the readlink command for this.","https://media.tiim.ch/3c1246e4-3201-4df6-af87-6aa4ab98800e.webp","(stable doodle) server room, neon, cables",[59,39,60,61],"dev","linux","bash","\u003Cp>I recently had to find a way to delete a folder using Ansible that was being created by Docker. The folder had a path like \u003Ccode>~/docker/myservice\u003C/code>. Since docker had created it as part of a volume, the folder did not belong to the current user. So deleting the folder using normal permissions failed.\u003C/p>",[39,61,59,60],[],{"html":66,"slug":67,"uuid":68,"title":69,"date":70,"modified":33,"section":71,"published":7,"content_tags":72,"links":75,"abstract":77,"tags":78,"type":10,"cover_image":-1,"description":11,"folder":79,"comments":80,"latestComment":47},"\u003Cp>I created pomo as a way to keep me focused for working on my masters thesis, and at the same time\nallowed me to learn the rust programming language.\u003C/p>\n\u003Cp>Pomo is a simple pomodoro timer. It allows you to either specify the number of repetitions (pomodori), the duration of the pomodori and the duration of the breaks, or\nyou can stecify an end time, and let pomo calculate the durations and repetitions.\u003C/p>\n\u003Cp>Pomo runs as a cli tool and stores the current state in a json file. All pomo executions excep \u003Ccode>pomo watch\u003C/code> just\nmodify this json file and terminate. The watch command displays the current pomodoro timer, optionally writes the timer to a text file,\nand watches for changes of the json file.\u003C/p>","projects/pomo","bfa1a7fa-b8a3-469f-b8e8-727ab705cb93","Pomo 🍅",["Date","2023-08-03T11:03:00.000Z"],"Projects",[73,74,59],"rust","cli",[76],"\u003Cp>\u003Ca href=\"https://github.com/Tiim/pomo\" rel=\"nofollow noopener noreferrer\">pomo Github\u003C/a>\u003C/p>","\u003Cp>I created pomo as a way to keep me focused for working on my masters thesis, and at the same time\nallowed me to learn the rust programming language.\u003C/p>",[74,59,73],"projects",[],{"html":82,"slug":83,"uuid":84,"title":85,"date":86,"modified":33,"section":71,"published":7,"content_tags":87,"links":93,"abstract":96,"tags":97,"type":10,"cover_image":-1,"description":11,"folder":79,"comments":98,"latestComment":47},"\u003Cp>A seemingly simple android widget that renders a markdown file from your phone as a widget on the home screen.\u003C/p>\n\u003Cp>Android widgets are handled by the operating system and only support a limited set of features for rendering.\nTo display markdown, the app displays a screenshot of a temporary web view, that displays the rendered markdown.\u003C/p>","projects/markdown-widget","c6a11779-cf98-4983-8744-9b1effae8d7a","Android Markdown Widget",["Date","2023-08-02T08:59:00.000Z"],[88,89,90,91,92,59],"android","java","kotlin","markdown","widget",[94,95],"\u003Cp>\u003Ca href=\"https://github.com/Tiim/Android-Markdown-Widget\" rel=\"nofollow noopener noreferrer\">Android Markdown Widget Github\u003C/a>\u003C/p>","\u003Cp>\u003Ca href=\"https://f-droid.org/packages/ch.tiim.markdown_widget/\" rel=\"nofollow noopener noreferrer\">Download on F-Droid\u003C/a>\u003C/p>","\u003Cp>A seemingly simple android widget that renders a markdown file from your phone as a widget on the home screen.\u003C/p>",[88,59,89,90,91,92],[],{"html":100,"slug":101,"uuid":102,"title":103,"date":104,"modified":33,"section":71,"published":7,"cover_image":105,"content_tags":106,"links":111,"abstract":114,"tags":115,"type":10,"description":11,"folder":79,"comments":116,"latestComment":47},"\u003Cp>I blogged about creating a comment system for my website \u003Ca href=\"https://tiim.ch/blog/2022-07-12-first-go-project-commenting-api\" rel=\"nofollow noopener noreferrer\">a while ago\u003C/a>,\nand later how I \u003Ca href=\"https://tiim.ch/blog/2022-12-indiewebifying-my-website-part-1\" rel=\"nofollow noopener noreferrer\">implemented webmentions into that same project\u003C/a>.\nSince then this little go program has grown quite a bit, and it has turned into a modular platform\nthat supports quite a few technologies:\u003C/p>\n\u003Cul>\n\u003Cli>The basic commenting system\u003C/li>\n\u003Cli>Sending and receiving webmentions\u003C/li>\n\u003Cli>Micropub server implementation\u003C/li>\n\u003Cli>IndieAuth (decentralized authentication standard based on OAuth)\u003C/li>\n\u003Cli>Admin dashboard\u003C/li>\n\u003Cli>Admin backup endpoint\u003C/li>\n\u003C/ul>\n\u003Cp>Currently I am working on supporting AcitvityPub, so people can follow my blog through the fediverse, and\ncomments through the fediverse show up back on my website.\u003C/p>\n\u003Cp>The architecture of the application is inspired by the Caddy webserver, where every feature is implemented as a plugin, and the core\nof the application is only concerned with initializing those plugins.\u003C/p>\n\u003Cp>If you have any questions, or want to run IndieGo yourself, don't hesitate to \u003Ca href=\"https://tiim.ch/contact\" rel=\"nofollow noopener noreferrer\">contact me\u003C/a>.\u003C/p>","projects/indiego","0cf125b3-a99a-4996-8f84-ec5105d64c57","IndieGo",["Date","2023-08-02T08:39:00.000Z"],"/assets/2022-07-first-go-project-commenting-api.png",[107,108,109,40,110,59],"go","golang","indieweb","sqlite",[112,113],"\u003Cp>\u003Ca href=\"https://github.com/Tiim/IndieGo\" rel=\"nofollow noopener noreferrer\">IndieGo Github\u003C/a>\u003C/p>","\u003Cp>\u003Ca href=\"https://comments.tiim.ch\" rel=\"nofollow noopener noreferrer\">Admin Interface\u003C/a> - authentication required\u003C/p>","\u003Cp>I blogged about creating a comment system for my website \u003Ca href=\"https://tiim.ch/blog/2022-07-12-first-go-project-commenting-api\">a while ago\u003C/a>,\nand later how I \u003Ca href=\"https://tiim.ch/blog/2022-12-indiewebifying-my-website-part-1\">implemented webmentions into that same project\u003C/a>.\nSince then this little go program has grown quite a bit, and it has turned into a modular platform\nthat supports quite a few technologies:\u003C/p>",[59,40,107,108,109,110],[117],{"id":118,"type":119,"replyTo":11,"timestamp":120,"page":101,"url":121,"content":122,"name":123},"3ec71b12-8097-4ea8-a1d3-a58bcd269bf7","webmention","2023-11-12T16:16:35Z","https://starrwulfe.xyz/2023/11/12/11/16/wordpress-go-boom/","At some point yesterday, my WordPress instance (thus the place where the thing you’re reading right now came from) ran out of memory.\n🤔 I suspect it’s because I’m asking it to do too much:\nBasic Blog stuff\nWebmention/Indieweb/Microformats stuff...","starrwulfe",{"html":125,"slug":126,"uuid":127,"title":128,"published":7,"description":129,"date":130,"modified":33,"cover_image":-1,"abstract":131,"tags":132,"links":-1,"type":10,"folder":133,"comments":134,"latestComment":47},"\u003Cp>I am planning to publish the list of blogs I subscribe to here in the future. But I still have not figured out how\nto automatically export the list of feeds from Mozilla Thunderbird and import it here. Until then, this page consists of\na manual list of pages that I like.\u003C/p>\n\u003Ch2>Links\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://blogroll.org/\" rel=\"nofollow noopener noreferrer\">Ye Olde Blogroll\u003C/a>, a human curated list of personal blogs.\u003C/li>\n\u003Cli>\u003Ca href=\"https://uses.tech/\" rel=\"nofollow noopener noreferrer\">uses.tech\u003C/a>, a list of personal websites that have a \u003Ca href=\"https://tiim.ch/uses\" rel=\"nofollow noopener noreferrer\">\u003Ccode>/uses\u003C/code>\u003C/a> page.\u003C/li>\n\u003Cli>\u003Ca href=\"https://changelog.com/news\" rel=\"nofollow noopener noreferrer\">changelog.com/news\u003C/a>, curated developer news as a podcast and as a newsletter. Unfortunately not available a RSS subscribable blog post.\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cem>You have some suggestions for other cool or useful websites or blogs? \u003Ca href=\"https://tiim.ch/contact\" rel=\"nofollow noopener noreferrer\">Let me know\u003C/a>.\u003C/em>\u003C/p>","pages/links","5d86f95b-751c-416d-bd24-e35401317494","Blogroll and Links","List of cool blogs and other links I follow",["Date","2023-07-31T19:06:29.000Z"],"\u003Cp>I am planning to publish the list of blogs I subscribe to here in the future. But I still have not figured out how\nto automatically export the list of feeds from Mozilla Thunderbird and import it here. Until then, this page consists of\na manual list of pages that I like.\u003C/p>",[],"pages",[]],"uses":{}}]}
