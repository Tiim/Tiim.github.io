!function(){"use strict";try{self["workbox:core:5.1.3"]&&_()}catch(e){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:5.1.3"]&&_()}catch(e){}const s=e=>e&&"object"==typeof e?e:{handle:e};class n{constructor(e,t,n="GET"){this.handler=s(t),this.match=e,this.method=n}}class r extends n{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)},t,s)}}const o=e=>new URL(String(e),location.href).href.replace(new RegExp(`^${location.origin}`),"");class i{constructor(){this._routes=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const{params:n,route:r}=this.findMatchingRoute({url:s,request:e,event:t});let o,i=r&&r.handler;if(!i&&this._defaultHandler&&(i=this._defaultHandler),i){try{o=i.handle({url:s,request:e,event:t,params:n})}catch(e){o=Promise.reject(e)}return o instanceof Promise&&this._catchHandler&&(o=o.catch(n=>this._catchHandler.handle({url:s,request:e,event:t}))),o}}findMatchingRoute({url:e,request:t,event:s}){const n=this._routes.get(t.method)||[];for(const r of n){let n;const o=r.match({url:e,request:t,event:s});if(o)return n=o,(Array.isArray(o)&&0===o.length||o.constructor===Object&&0===Object.keys(o).length||"boolean"==typeof o)&&(n=void 0),{route:r,params:n}}return{}}setDefaultHandler(e){this._defaultHandler=s(e)}setCatchHandler(e){this._catchHandler=s(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this._routes.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this._routes.get(e.method).splice(s,1)}}let a;const c=()=>(a||(a=new i,a.addFetchListener(),a.addCacheListener()),a);function l(e,s,o){let i;if("string"==typeof e){const t=new URL(e,location.href);i=new n(({url:e})=>e.href===t.href,s,o)}else if(e instanceof RegExp)i=new r(e,s,o);else if("function"==typeof e)i=new n(e,s,o);else{if(!(e instanceof n))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});i=e}return c().registerRoute(i),i}const u={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},h=e=>[u.prefix,e,u.suffix].filter(e=>e&&e.length>0).join("-"),d=e=>e||h(u.runtime),p=new Set;const f=(e,t)=>e.filter(e=>t in e),g=async({request:e,mode:t,plugins:s=[]})=>{const n=f(s,"cacheKeyWillBeUsed");let r=e;for(const e of n)r=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:r}),"string"==typeof r&&(r=new Request(r));return r},m=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:r=[]})=>{const o=await self.caches.open(e),i=await g({plugins:r,request:t,mode:"read"});let a=await o.match(i,n);for(const t of r)if("cachedResponseWillBeUsed"in t){const r=t.cachedResponseWillBeUsed;a=await r.call(t,{cacheName:e,event:s,matchOptions:n,cachedResponse:a,request:i})}return a},w=async({cacheName:e,request:s,response:n,event:r,plugins:i=[],matchOptions:a})=>{const c=await g({plugins:i,request:s,mode:"write"});if(!n)throw new t("cache-put-with-no-response",{url:o(c.url)});const l=await(async({request:e,response:t,event:s,plugins:n=[]})=>{let r=t,o=!1;for(const t of n)if("cacheWillUpdate"in t){o=!0;const n=t.cacheWillUpdate;if(r=await n.call(t,{request:e,response:r,event:s}),!r)break}return o||(r=r&&200===r.status?r:void 0),r||null})({event:r,plugins:i,response:n,request:c});if(!l)return;const u=await self.caches.open(e),h=f(i,"cacheDidUpdate"),d=h.length>0?await m({cacheName:e,matchOptions:a,request:c}):null;try{await u.put(c,l)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of p)await e()}(),e}for(const t of h)await t.cacheDidUpdate.call(t,{cacheName:e,event:r,oldResponse:d,newResponse:l,request:c})},y=m,v=async({request:e,fetchOptions:s,event:n,plugins:r=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const o=f(r,"fetchDidFail"),i=o.length>0?e.clone():null;try{for(const t of r)if("requestWillFetch"in t){const s=t.requestWillFetch,r=e.clone();e=await s.call(t,{request:r,event:n})}}catch(e){throw new t("plugin-error-request-will-fetch",{thrownError:e})}const a=e.clone();try{let t;t="navigate"===e.mode?await fetch(e):await fetch(e,s);for(const e of r)"fetchDidSucceed"in e&&(t=await e.fetchDidSucceed.call(e,{event:n,request:a,response:t}));return t}catch(e){for(const t of o)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:i.clone(),request:a.clone()});throw e}};try{self["workbox:strategies:5.1.3"]&&_()}catch(e){}const q={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};class j{constructor(e,t,{onupgradeneeded:s,onversionchange:n}={}){this._db=null,this._name=e,this._version=t,this._onupgradeneeded=s,this._onversionchange=n||(()=>this.close())}get db(){return this._db}async open(){if(!this._db)return this._db=await new Promise((e,t)=>{let s=!1;setTimeout(()=>{s=!0,t(new Error("The open request was blocked and timed out"))},this.OPEN_TIMEOUT);const n=indexedDB.open(this._name,this._version);n.onerror=()=>t(n.error),n.onupgradeneeded=e=>{s?(n.transaction.abort(),n.result.close()):"function"==typeof this._onupgradeneeded&&this._onupgradeneeded(e)},n.onsuccess=()=>{const t=n.result;s?t.close():(t.onversionchange=this._onversionchange.bind(this),e(t))}}),this}async getKey(e,t){return(await this.getAllKeys(e,t,1))[0]}async getAll(e,t,s){return await this.getAllMatching(e,{query:t,count:s})}async getAllKeys(e,t,s){return(await this.getAllMatching(e,{query:t,count:s,includeKeys:!0})).map(e=>e.key)}async getAllMatching(e,{index:t,query:s=null,direction:n="next",count:r,includeKeys:o=!1}={}){return await this.transaction([e],"readonly",(i,a)=>{const c=i.objectStore(e),l=t?c.index(t):c,u=[],h=l.openCursor(s,n);h.onsuccess=()=>{const e=h.result;e?(u.push(o?e:e.value),r&&u.length>=r?a(u):e.continue()):a(u)}})}async transaction(e,t,s){return await this.open(),await new Promise((n,r)=>{const o=this._db.transaction(e,t);o.onabort=()=>r(o.error),o.oncomplete=()=>n(),s(o,e=>n(e))})}async _call(e,t,s,...n){return await this.transaction([t],s,(s,r)=>{const o=s.objectStore(t),i=o[e].apply(o,n);i.onsuccess=()=>r(i.result)})}close(){this._db&&(this._db.close(),this._db=null)}}j.prototype.OPEN_TIMEOUT=2e3;const b={readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]};for(const[e,t]of Object.entries(b))for(const s of t)s in IDBObjectStore.prototype&&(j.prototype[s]=async function(t,...n){return await this._call(s,t,e,...n)});try{self["workbox:precaching:5.1.3"]&&_()}catch(e){}self.addEventListener("activate",()=>self.clients.claim()),self.addEventListener("install",()=>self.skipWaiting());var R=new class{constructor(e={}){if(this._cacheName=d(e.cacheName),e.plugins){const t=e.plugins.some(e=>!!e.cacheWillUpdate);this._plugins=t?e.plugins:[q,...e.plugins]}else this._plugins=[q];this._networkTimeoutSeconds=e.networkTimeoutSeconds||0,this._fetchOptions=e.fetchOptions,this._matchOptions=e.matchOptions}async handle({event:e,request:s}){const n=[];"string"==typeof s&&(s=new Request(s));const r=[];let o;if(this._networkTimeoutSeconds){const{id:t,promise:i}=this._getTimeoutPromise({request:s,event:e,logs:n});o=t,r.push(i)}const i=this._getNetworkPromise({timeoutId:o,request:s,event:e,logs:n});r.push(i);let a=await Promise.race(r);if(a||(a=await i),!a)throw new t("no-response",{url:s.url});return a}_getTimeoutPromise({request:e,logs:t,event:s}){let n;return{promise:new Promise(t=>{n=setTimeout(async()=>{t(await this._respondFromCache({request:e,event:s}))},1e3*this._networkTimeoutSeconds)}),id:n}}async _getNetworkPromise({timeoutId:e,request:t,logs:s,event:n}){let r,o;try{o=await v({request:t,event:n,fetchOptions:this._fetchOptions,plugins:this._plugins})}catch(e){r=e}if(e&&clearTimeout(e),r||!o)o=await this._respondFromCache({request:t,event:n});else{const e=o.clone(),s=w({cacheName:this._cacheName,request:t,response:e,event:n,plugins:this._plugins});if(n)try{n.waitUntil(s)}catch(e){}}return o}_respondFromCache({event:e,request:t}){return y({cacheName:this._cacheName,request:t,event:e,matchOptions:this._matchOptions,plugins:this._plugins})}}({cacheName:"nf-v1"});l((function(e){var t=e.url;return"/assets/js/service-worker.js"!==t.pathname&&"/service-worker.js"!==t.pathname&&"/"===t.pathname}),R),l((function(e){var t=e.url;return"/assets/js/service-worker.js"!==t.pathname&&"/service-worker.js"!==t.pathname&&("string"==typeof/\.(js|css|png|jpg|jpeg|svg|md|json)/?t.pathname===/\.(js|css|png|jpg|jpeg|svg|md|json)/:/\.(js|css|png|jpg|jpeg|svg|md|json)/ instanceof RegExp&&/\.(js|css|png|jpg|jpeg|svg|md|json)/.test(t.pathname))}),R)}();
