{"type":"data","nodes":[{"type":"data","data":[{"footer":1},{"html":2,"slug":3,"uuid":4,"created":5,"date":6,"published":7,"abstract":8,"tags":9,"links":-1,"type":10,"cover_image":-1,"description":11,"folder":12},"\u003Cp>Built with SvelteKit and hosted on GitHub Pages.\u003C/p>\n\u003Cp>View this website on \u003Ca href=\"https://github.com/Tiim/Tiim.github.io\" rel=\"nofollow noopener noreferrer\">GitHub\u003C/a>!\u003C/p>\n\u003Ch2>Other pages\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://tiim.ch/pages/links\" rel=\"nofollow noopener noreferrer\">Links and Blogroll\u003C/a>\u003C/li>\n\u003C/ul>","footer","e556fd14-3acd-4a7b-9b31-929fdd6d2b7a",["Date","2023-07-31T20:16:19.000Z"],["Date","2023-07-31T20:16:19.000Z"],true,"\u003Cp>Built with SvelteKit and hosted on GitHub Pages.\u003C/p>",[],"article","","metadata"],"uses":{}},{"type":"data","data":[{"posts":1,"details":69},[2,34],{"html":3,"slug":4,"uuid":5,"date":6,"created":7,"aliases":8,"title":10,"published":11,"modified":9,"description":12,"cover_image":13,"cover_image_txt":14,"content_tags":15,"abstract":20,"tags":21,"links":-1,"type":22,"folder":23,"comments":24,"latestComment":33},"\u003Cp>I recently ran into the problem that when the Cisco AnyConnect VPN is connected, the network connectivity inside of WSL2 stops working. I found a bunch of solutions online for it: most just focus on the fact that the VPN DNS settings are not applied inside WSL2 and therefore no domain names can be resolved. I additionally had the issue that the WSL2 network interface somehow gets disconnected when the VPN starts.\u003C/p>\n\u003Cp>I will show you how I fixed this problem for me and explain what the commands I used do. This post is mostly for my reference, but I hope it helps anyone else as well.\u003C/p>\n\u003Ch2>Finding out what your problem is\u003C/h2>\n\u003Cp>Let's check first if we have internet access inside WSL2. For this run the ping command with an IP address as a destination:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">ping 8.8.8.8\n\u003C/code>\u003C/pre>\n\u003Cp>If you get something like this as the output, your internet connection is fine, and it's just the DNS nameserver addresses that are misconfigured, you can jump forward to Solution 2.\u003C/p>\n\u003Cpre>\u003Ccode>PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.\n64 bytes from 8.8.8.8: icmp_seq=1 ttl=108 time=4.53 ms\n64 bytes from 8.8.8.8: icmp_seq=2 ttl=108 time=3.94 ms\n64 bytes from 8.8.8.8: icmp_seq=3 ttl=108 time=3.97 ms\n64 bytes from 8.8.8.8: icmp_seq=4 ttl=108 time=3.78 ms\n64 bytes from 8.8.8.8: icmp_seq=5 ttl=108 time=3.77 ms\n64 bytes from 8.8.8.8: icmp_seq=6 ttl=108 time=3.76 ms\n64 bytes from 8.8.8.8: icmp_seq=7 ttl=108 time=3.81 ms\n\u003C/code>\u003C/pre>\n\u003Cp>If you don't get any responses from the ping (i.e. no more output after the \u003Ccode>PING 8.8.8.8 (8.8.8.8) ...\u003C/code> line), you need to configure the WSL and the VPN network adapter metric. Go to Solution 1.\u003C/p>\n\u003Cp>To check if the DNS is working, we can again use the ping command, this time with a domain name:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">ping google.com\n\u003C/code>\u003C/pre>\n\u003Cp>If you get responses, the DNS and your internet connection are working! If not go to Section 2.\u003C/p>\n\u003Ch2>Solution 1: Fixing the Network Adapter\u003C/h2>\n\u003Cp>Run the following two commands in PowerShell as administrator:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-PowerShell\">Get-NetAdapter | Where-Object {$_.InterfaceDescription -Match \"Cisco AnyConnect\"} | Set-NetIPInterface -InterfaceMetric 4000\n\nGet-NetIPInterface -InterfaceAlias \"vEthernet (WSL)\" | Set-NetIPInterface -InterfaceMetric 1\n\u003C/code>\u003C/pre>\n\u003Cp>Let me explain what those two commands do. Both follow the same pattern of listing all network adapters, selecting a specific adapter from the list and setting its \"metric\".\u003C/p>\n\u003Cp>You can imagine an adapter as a virtual network port on the back of your pc or laptop. But instead of sending packets through the wire, the driver for a specific port can do whatever it wants with those packets, in the case of a VPN, the packets get encrypted and forwarded to the internet via another adapter.\u003C/p>\n\u003Cp>The \u003Ca href=\"https://learn.microsoft.com/en-us/windows-server/networking/technologies/network-subsystem/net-sub-interface-metric\" rel=\"nofollow noopener noreferrer\">InterfaceMetric\u003C/a> is a value associated with each adapter that determines the order of those adapters. This allows windows to determine which adapter to prefer over another one.\u003C/p>\n\u003Cp>By setting the interface metric of the Cisco adapter to 4000 and the metric of the WSL adapter to one, we allow the traffic from WSL to flow through the Cisco adapter. To be honest I do not exactly understand why this works but it does.\u003C/p>\n\u003Ch2>Solution 2: Registering the VPN DNS inside of WSL\u003C/h2>\n\u003Cp>Setting the DNS servers is, unfortunately, a little bit more involved than just running two commands, we need to edit the files \u003Ccode>/etc/wsl.conf\u003C/code> and \u003Ccode>/etc/resolv.conf\u003C/code>, and restart wsl in between. Let's get to it:\u003C/p>\n\u003Cp>Edit the file \u003Ccode>/etc/wsl.conf\u003C/code> inside of WSL2 using a text editor. I suggest doing this through the terminal since you need root permissions to do that:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">sudo nano /etc/wsl.conf\n# feel free to use another editor such as vim or emacs\n\u003C/code>\u003C/pre>\n\u003Cp>Most likely this file does not exist yet, otherwise, I suggest you create a backup of the original file to preserve the settings.\u003C/p>\n\u003Cp>Add the following config settings into the file:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-ini\">[network]\ngenerateResolvConf = false\n\u003C/code>\u003C/pre>\n\u003Cp>This will instruct WSL to not override the \u003Ccode>/etc/resolv.conf\u003C/code> file on every start-up. Save the file and restart WSL with the following command so that the changed config takes effect:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">wsl.exe --shutdown\n\u003C/code>\u003C/pre>\n\u003Cp>Now open a PowerShell terminal and list all network adapters with the following command:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-PowerShell\">ipconfig /all\n\u003C/code>\u003C/pre>\n\u003Cp>Find the Cisco AnyConnect adapter and copy the IP addresses in the DNS-Server field. We will need those IPs in the next step.\u003C/p>\n\u003Cp>Start WSL again and edit the \u003Ccode>/etc/resolv.conf\u003C/code> file:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">sudo nano /etc/resolv.conf\n\u003C/code>\u003C/pre>\n\u003Cp>Most likely there is already something in this file, you can discard it. When undoing the changes, WSL will automatically regenerate this file anyway, so you don't need to back it up.\u003C/p>\n\u003Cp>Delete all the contents and enter the IP addresses you noted down in the last step in the following format:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-resolv\">nameserver xxx.xxx.xxx.xxx\n\u003C/code>\u003C/pre>\n\u003Cp>Put each address on a new line, preceded by the string \u003Ccode>nameserver\u003C/code>.\nSave the file and restart WSL with the same command as above:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">wsl.exe --shutdown\n\u003C/code>\u003C/pre>\n\u003Cp>Now open up WSL for the last time and set the immutable flag for the \u003Ccode>/etc/resolv.conf\u003C/code> file:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">chattr +i /etc/resolv.conf\n\u003C/code>\u003C/pre>\n\u003Cp>And for the last time shut down WSL. Your DNS should now be working fine!\u003C/p>\n\u003Ch2>Undoing those changes\u003C/h2>\n\u003Cp>I did not have a need to undo the steps for \u003Ccode>Solution 1\u003C/code>, and I'm pretty sure the metric resets after each system reboot anyway so there is not much to do.\u003C/p>\n\u003Cp>To get DNS working again when not connected to the VPN run the following commands:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">sudo chattr -i /etc/resolv.conf\nsudo rm /etc/resolv.conf\nsudo rm /etc/wsl.conf\nwsl.exe --shutdown\n\u003C/code>\u003C/pre>\n\u003Cp>This will first clear the immutable flag off \u003Ccode>/etc/resolv.conf\u003C/code>, and delete it. Next, it will delete \u003Ccode>/etc/wsl.conf\u003C/code> if you have a backup of a previous \u003Ccode>wsl.conf\u003C/code> file, you can replace it with that. At last, we shutdown WSL again for the changes to take effect.\u003C/p>\n\u003Cp>Unfortunately, this is quite a procedure to get a VPN to work with WSL2, but I'm hopeful that this will soon not be necessairy anymore.\u003C/p>","blog/2023-03-21-anyconnect-wsl2","c67bc4dc-4c96-41b1-afb5-15a99457dedf",["Date","2023-03-15T15:22:04.511Z"],["Date","2023-03-15T15:22:04.511Z"],[9],null,"Fix Network Connectivity in WSL2 with Cisco AnyConnect VPN",true,"I ran into problems using Cisco AnyConnect VPN from inside of WSL2. I'm sharing my solution as a step-by-step guide for my reference and to help anyone with the same problem.","https://media.tiim.ch/66ca4290-3fc0-450f-977b-f00f888e4af3.webp","Stable Diffusion - Anything V3.0 - 1boy, hacker, in front of computer, back of head visible, vintage neon color scheme, terminal, big monitor",[16,17,18,19],"wsl","vpn","networking","dns","\u003Cp>I recently ran into the problem that when the Cisco AnyConnect VPN is connected, the network connectivity inside of WSL2 stops working. I found a bunch of solutions online for it: most just focus on the fact that the VPN DNS settings are not applied inside WSL2 and therefore no domain names can be resolved. I additionally had the issue that the WSL2 network interface somehow gets disconnected when the VPN starts.\u003C/p>",[19,18,17,16],"article","blog",[25],{"id":26,"type":27,"replyTo":28,"timestamp":29,"page":4,"url":30,"content":31,"name":32},"ebe11171-5e39-450b-bfad-e976f7659489","comment","","2024-01-12T12:11:32Z","https://tiim.ch/blog/2023-03-21-anyconnect-wsl2#ebe11171-5e39-450b-bfad-e976f7659489","Thank you Tim! Had an issue where WSL network was working for some users and not others when using Cisco AnyConnect, network traffic seemed to go back to the AnyConnect interface and didn't reach WSL. Solution 1 did the trick for me!","Neil","2024-01-20T09:36:14Z",{"html":35,"slug":36,"uuid":37,"title":38,"published":11,"date":39,"description":40,"cover_image":41,"content_tags":42,"abstract":47,"tags":48,"links":-1,"type":22,"folder":23,"comments":51,"latestComment":33},"\u003Cp>There \u003Ca href=\"https://gist.github.com/dentechy/de2be62b55cfd234681921d5a8b6be11\" rel=\"nofollow noopener noreferrer\">are\u003C/a> \u003Ca href=\"https://medium.com/@thinkbynumbers/automatically-start-wsl-ssh-and-various-services-on-windows-845dfda89690\" rel=\"nofollow noopener noreferrer\">many\u003C/a> \u003Ca href=\"https://faun.pub/how-to-setup-ssh-connection-on-ubuntu-windows-subsystem-for-linux-2b36afb943dc\" rel=\"nofollow noopener noreferrer\">guides\u003C/a> on the \u003Ca href=\"https://superuser.com/questions/1112007/how-to-run-ubuntu-service-on-windows-at-startup\" rel=\"nofollow noopener noreferrer\">internet\u003C/a> showing how to set up an SSH server \u003Cstrong>inside\u003C/strong> WSL. This is currently not that easy and in my experience, it is not really stable. An alternative to this is to run the SSH server outside of WSL on the windows side and set its default shell to the WSL shell (or any other shell for that matter).\u003C/p>\n\u003Ch2>Installing the OpenSSH Server\u003C/h2>\n\u003Cp>Windows has been shipping with an OpenSSH client and server for a long time. They are not installed by default but can be activated either in the settings as described \u003Ca href=\"https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse\" rel=\"nofollow noopener noreferrer\">in the official docs\u003C/a> or with the following PowerShell commands.\u003C/p>\n\u003Cp>\u003Cstrong>You will need to start PowerShell as Administrator\u003C/strong>\u003C/p>\n\u003Cp>First, install the OpenSSH client and server.\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-PowerShell\">Add-WindowsCapability -Online -Name OpenSSH.Client~~~~0.0.1.0\nAdd-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0\n\u003C/code>\u003C/pre>\n\u003Cp>Enable the SSH service and make sure the firewall rule is configured:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-PowerShell\"># Enable the service\nStart-Service sshd\nSet-Service -Name sshd -StartupType 'Automatic'\n\n# Confirm the firewall rule is configured. It should be created automatically by setup. Run the following to verify\nif (!(Get-NetFirewallRule -Name \"OpenSSH-Server-In-TCP\" -ErrorAction SilentlyContinue | Select-Object Name, Enabled)) {\n    Write-Output \"Firewall Rule 'OpenSSH-Server-In-TCP' does not exist, creating it...\"\n    New-NetFirewallRule -Name 'OpenSSH-Server-In-TCP' -DisplayName 'OpenSSH Server (sshd)' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22\n} else {\n    Write-Output \"Firewall rule 'OpenSSH-Server-In-TCP' has been created and exists.\"\n}\n\u003C/code>\u003C/pre>\n\u003Cp>Congratulations, you have installed the SSH server on your Windows machine. And all without manually setting up a background service or modifying config files.\u003C/p>\n\u003Ch2>Setting WSL as Default Shell\u003C/h2>\n\u003Cp>To directly boot into WSL when connecting, we need to change the default shell from \u003Ccode>cmd.exe\u003C/code> or \u003Ccode>PowerShell.exe\u003C/code> to \u003Ccode>bash.exe\u003C/code>, which in turn runs the default WSL distribution. This can be done with the PowerShell command:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-PowerShell\">New-ItemProperty -Path \"HKLM:\\SOFTWARE\\OpenSSH\" -Name DefaultShell -Value \"C:\\WINDOWS\\System32\\bash.exe\" -PropertyType String -Force\n\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>Note\u003C/strong>: even though the shell is running on the Linux side, the SSH server is still on windows. This means you have to use to windows username to log in, and the SCP command copies files relative to the user directory on windows.\u003C/p>\n\u003Ch2>Enable Key-based Authentication (non-Admin User)\u003C/h2>\n\u003Cp>\u003Cstrong>Note\u003C/strong>: If the user account has Admin permissions, read the next chapter, otherwise continue reading.\u003C/p>\n\u003Cp>Create the folder \u003Ccode>.ssh\u003C/code> in the users home directory on windows: (e.g. \u003Ccode>C:\\Users\\&#x3C;username>\\.ssh\u003C/code>). Run the following commands in PowerShell (not as administrator).\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-PowerShell\">New-Item -Path ~\\.ssh -ItmeType \"directory\"\nNew-Item -Path ~\\.ssh\\authorized_keys\n\u003C/code>\u003C/pre>\n\u003Cp>The file \u003Ccode>.ssh\\autzorized_keys\u003C/code> will contain a list of all public keys that shall be allowed to connect to the SSH server.\u003C/p>\n\u003Cp>Copy the contents of your public key file (usually stored in \u003Ccode>~/.ssh/id_rsa.pub\u003C/code>) to the \u003Ccode>authorized_keys\u003C/code> file. If a key is already present, paste your key on a new line.\u003C/p>\n\u003Ch2>Enable Key-based Authentication (Admin User)\u003C/h2>\n\u003Cp>If the user is in the Administrators group, it is not possible to have the \u003Ccode>authorized_keys\u003C/code> file in the user directory for security purposes.\nInstead, it needs to be located on the following path \u003Ccode>%ProgramData%\\ssh\\administrators_authorized_keys\u003C/code>. A second requirement is that it is only accessible to Administrator users, to prevent a normal user from gaining admin permissions.\u003C/p>\n\u003Cp>To create the file start PowerShell as administrator and run the following command.\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-PowerShell\">New-Item -Path $env:programdata\\ssh\\administrators_authorized_keys\n\u003C/code>\u003C/pre>\n\u003Cp>This will create the file with the correct permissions. Now open the file and paste your public key into it. The public key should be located at \u003Ccode>~/.ssh/id_rsa.pub\u003C/code>. If a key is already present, paste your key on a new line.\u003C/p>\n\u003Ch2>Verifying everything works\u003C/h2>\n\u003Cp>Verify that you can SSH into your machine by running the following inside WSL:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">IP=$(cat /etc/resolv.conf | grep nameserver | cut -d \" \" -f2) # get the windows host ip address\nssh &#x3C;user>@$IP\n\u003C/code>\u003C/pre>\n\u003Cp>Or from PowerShell and cmd:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-PowerShell\">ssh &#x3C;user>@localhost\n\u003C/code>\u003C/pre>\n\u003Ch2>Drawbacks\u003C/h2>\n\u003Cp>There are some drawbacks to this approach. If you rely on some programs or scripts to work over SSH, this might not be the method for you. Most scripts expect a unix machine on the other end, or if they expect a windows machine they will most likely not be configured to deal with WSL.\u003C/p>\n\u003Cp>If you however just want to connect to your pc to copy some files or change some settings this approach is perfectly fine.\u003C/p>","blog/2022-03-ssh-windows-wsl","03b5a86c-5f4d-4086-9f5f-e1e46b4bcf58","How to set up an SSH Server on Windows with WSL",["Date","2022-03-02T00:00:00.000Z"],"It can be very helpful to be able to connect to your laptop or desktop PC from anywhere using SSH. I will show you how to easily set this up on Windows with WSL.","/assets/2022-03-ssh-windows-wsl.png",[43,44,45,46],"SSH","WSL","Windows","dev","\u003Cp>There \u003Ca href=\"https://gist.github.com/dentechy/de2be62b55cfd234681921d5a8b6be11\">are\u003C/a> \u003Ca href=\"https://medium.com/@thinkbynumbers/automatically-start-wsl-ssh-and-various-services-on-windows-845dfda89690\">many\u003C/a> \u003Ca href=\"https://faun.pub/how-to-setup-ssh-connection-on-ubuntu-windows-subsystem-for-linux-2b36afb943dc\">guides\u003C/a> on the \u003Ca href=\"https://superuser.com/questions/1112007/how-to-run-ubuntu-service-on-windows-at-startup\">internet\u003C/a> showing how to set up an SSH server \u003Cstrong>inside\u003C/strong> WSL. This is currently not that easy and in my experience, it is not really stable. An alternative to this is to run the SSH server outside of WSL on the windows side and set its default shell to the WSL shell (or any other shell for that matter).\u003C/p>",[46,49,50,16],"ssh","windows",[52,58,64],{"id":53,"type":27,"replyTo":54,"timestamp":55,"page":36,"url":56,"content":57,"name":28},"20f2c526-7466-4c21-83ac-51750f278328","f7c1891b-e97b-4030-863e-19344ed84d32","2022-09-20T14:59:17Z","https://tiim.ch/blog/2022-03-ssh-windows-wsl#20f2c526-7466-4c21-83ac-51750f278328","Hi Tim, no problem. I had this error in \"Event Viewer > Applications and Services Logs > OpenSSH > Admin\" and figure it out that sshd seems to search the Administrators groups to operate, literal name and not properly localized by region.\n\nerroid:2 user:SYSTEM details:\"sshd: error: unable to resolve group administrators\"\n\nMaybe is not all the non-english windows with this problem, but I have it but after created the group works like a charm.",{"id":54,"type":27,"replyTo":59,"timestamp":60,"page":36,"url":61,"content":62,"name":63},"5de01bc5-b7c7-4522-9dfe-c67f103d4c03","2022-09-20T12:58:29Z","https://tiim.ch/blog/2022-03-ssh-windows-wsl#f7c1891b-e97b-4030-863e-19344ed84d32","Hi FinderX\n\nThanks for the heads up. I don't remember having to create a new user group, even though my system language is German. Maybe I just forgot about that though.","Tim",{"id":59,"type":27,"replyTo":28,"timestamp":65,"page":36,"url":66,"content":67,"name":68},"2022-09-20T07:50:46Z","https://tiim.ch/blog/2022-03-ssh-windows-wsl#5de01bc5-b7c7-4522-9dfe-c67f103d4c03","Hi!\nI add some roundabouts about admin-users, if your windows ssh server system language is NOT english, you must create 'Administrators' group (without quotes) in your language equivalent of \"Users and Local Groups > Groups\", if your server is a DC (Domain Controller) create it in your language equivalent of \"Active Directories Users and Computers\".\n\nCreate the user group with name Administrators, description whatever, ex. \"Dummy group for sshd to work correctly.\", and in Members add your language equivalent of the user Administrator.\n\nThis is optional but I suggest you change these settings in \"%programdata%\\ssh\\sshd_config\" after you successfully copy your public key to the ssh server :\n\nStrictModes yes\nPubkeyAuthentication yes\nPasswordAuthentication no\n\nYou can see the log activity in your language equivalent of \"Applications and Services Logs > OpenSSH > Admin or Operational\"\n\nBest Regards.","FinderX",{"tag":16}],"uses":{"params":["slug"]}}]}
