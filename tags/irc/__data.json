{"type":"data","nodes":[{"type":"data","data":[{"footer":1},{"html":2,"slug":3,"uuid":4,"created":5,"date":6,"published":7,"abstract":8,"tags":9,"links":-1,"type":10,"cover_image":-1,"description":11,"folder":12},"\u003Cp>Built with SvelteKit and hosted on GitHub Pages.\u003C/p>\n\u003Cp>View this website on \u003Ca href=\"https://github.com/Tiim/Tiim.github.io\" rel=\"nofollow noopener noreferrer\">GitHub\u003C/a>!\u003C/p>\n\u003Ch2>Other pages\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://tiim.ch/pages/links\" rel=\"nofollow noopener noreferrer\">Links and Blogroll\u003C/a>\u003C/li>\n\u003C/ul>","footer","e556fd14-3acd-4a7b-9b31-929fdd6d2b7a",["Date","2023-07-31T20:16:19.000Z"],["Date","2023-07-31T20:16:19.000Z"],true,"\u003Cp>Built with SvelteKit and hosted on GitHub Pages.\u003C/p>",[],"article","","metadata"],"uses":{}},{"type":"data","data":[{"posts":1,"details":72},[2,33],{"html":3,"slug":4,"uuid":5,"date":6,"created":7,"aliases":8,"title":10,"published":11,"modified":9,"description":12,"cover_image":13,"cover_image_txt":14,"content_tags":15,"abstract":20,"tags":21,"links":-1,"type":22,"folder":23,"comments":24,"latestComment":29},"\u003Cp>In one of my last blog posts I \u003Ca href=\"https://tiim.ch/blog/2023-01-15-weechat-docker\" rel=\"nofollow noopener noreferrer\">set up WeeChat in docker\u003C/a>, which works mostly pretty great for me so far. Although, it started to bug me that I felt the need to regularly check IRC in case I missed someone potentially tagging or private-messaging me. While looking around at how I could be notified on mentions and private messages, I found the \u003Ca href=\"https://weechat.org/files/doc/stable/weechat_user.en.html#trigger\" rel=\"nofollow noopener noreferrer\">trigger plugin\u003C/a>. A powerful plugin that comes pre-installed on WeeChat. It lets the user specify a WeeChat command that will be executed when a specific event occurs. This plugin is probably powerful enough to build a small IRC bot, directly in WeeChat.\u003C/p>\n\u003Cp>Also, I recently found the web service \u003Ca href=\"https://ntfy.sh\" rel=\"nofollow noopener noreferrer\">ntfy.sh\u003C/a>. It sends push notifications whenever you send an HTTP post request to a certain URL. I already have ntfy.sh installed on my android phone, and I also found a minimal and lightweight \u003Ca href=\"https://github.com/lucas-bortoli/ntfysh-windows\" rel=\"nofollow noopener noreferrer\">desktop client\u003C/a>.\u003C/p>\n\u003Cp>I managed to set a WeeChat trigger up that fires every time I get mentioned (highlighted in WeeChat terminology), and a trigger that fires every time I get a private message. Both of those triggers execute the \u003Ccode>/exec\u003C/code> command which runs an arbitrary shell command. The exec command runs the \u003Ccode>wget\u003C/code> program to send a post request to the ntfy.sh server, which in turn sends a notification to all apps that subscribe to the same URL as the post request was sent. I would usually use the curl program for this instead of wget, but the docker default docker image doesn't contain a curl install.\u003C/p>\n\u003Cp>Here you can see the two \u003Ccode>/trigger\u003C/code> commands:\u003C/p>\n\u003Cp>\u003Cem>trigger on mention\u003C/em>\u003C/p>\n\u003Cpre>\u003Ccode>/trigger addreplace notify_highlight print '' '${tg_highlight}' '/.*/${weechat.look.nick_prefix}${tg_prefix_nocolor}${weechat.look.nick_suffix} ${tg_message_nocolor}/' '/exec -norc -nosw -bg wget -O- --post-data \"${tg_message}\" \"-                   -header=Title: New highlight: ${buffer.full_name}\" https://ntfy.sh/my_ntfy_topic_1234'\n\u003C/code>\u003C/pre>\n\u003Cp>\u003Cem>trigger on private message\u003C/em>\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-weechat\">/trigger addreplace notify_privmsg print '' '${tg_tag_notify} == private &#x26;&#x26; ${buffer.notify} > 0' '/.*/${weechat.look.nick_prefix}${tg_prefix_nocolor}${weechat.look.nick_suffix} ${tg_message_nocolor}/' '/exec -norc -nosw -bg wget -O- --post-data \"${tg_message}\" \"--header=Title: New private message: ${buffer.full_name}\" https://ntfy.sh/my_ntfy_topic_1234'\n\u003C/code>\u003C/pre>\n\u003Ch2>The trigger commands in detail\u003C/h2>\n\u003Cp>In case you don't just want to copy and paste some random command from the internet into your WeeChat (which you shouldn't do anyway), I will try to explain the trigger command that fires when you get mentioned in a message:\u003C/p>\n\u003Cp>Let's first look at the trigger command itself:\n\u003Ccode>/trigger addreplace &#x3C;name> &#x3C;hook> &#x3C;argument> &#x3C;condition> &#x3C;variable-replace> &#x3C;command>\u003C/code>\nWe call the \u003Ccode>/trigger\u003C/code> command with the \u003Ccode>addreplace\u003C/code> subcommand. This subcommand will either register a new trigger or replace it if one with the same name already exists.\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ccode>name\u003C/code> - This argument is self-explanatory, the name of the trigger. In our case I called it \u003Ccode>notify_highlight\u003C/code>, but you could call it whatever you want.\u003C/li>\n\u003Cli>\u003Ccode>hook\u003C/code> - This argument specifies which hook or event the trigger should listen for. WeeChat is built as an event-driven platform, so pretty much anything from mouse movements to IRC messages are handled via events. In this case, we want to trigger on the \u003Ccode>print\u003C/code> event, which is fired every time a new message gets received from IRC.\u003C/li>\n\u003Cli>\u003Ccode>argument\u003C/code> - The argument is needed for some hooks, but not for the \u003Ccode>print\u003C/code> hook, so we are going to ignore that one for now and just set it to an empty string \u003Ccode>''\u003C/code>.\u003C/li>\n\u003Cli>\u003Ccode>condition\u003C/code> - The condition must evaluate to \u003Ccode>true\u003C/code> for the trigger to fire. This is helpful because the \u003Ccode>print\u003C/code> trigger fires for every new message, but we only want to be notified when the new message mentions our nick. The condition for this is \u003Ccode>${tg_highlight}\u003C/code>. You can find the list of variables that you can access with the command \u003Ccode>/trigger monitor\u003C/code>, which prints all variables for every trigger that gets executed.\u003C/li>\n\u003Cli>\u003Ccode>variable-replace\u003C/code> - This took me a while to understand. This command is used to manipulate data and save it to a variable. The syntax is inspired by the sed command. Explaining it fully is out of the scope of this blog post, but you can take a look at the \u003Ca href=\"https://weechat.org/files/doc/devel/weechat_user.en.html#trigger_regex\" rel=\"nofollow noopener noreferrer\">docs\u003C/a>. In our example, we replace the whole content of the variable \u003Ccode>tg_message\u003C/code> with the format string \u003Ccode>${weechat.look.nick_prefix}${tg_prefix_nocolor}${weechat.look.nick_suffix} ${tg_message_nocolor}\u003C/code> which results in a sting like \u003Ccode>&#x3C;tiim> Hello world!\u003C/code>.\u003C/li>\n\u003Cli>\u003Ccode>command\u003C/code> - The last argument is the command that gets executed whenever this trigger fires. In our case, we use the \u003Ccode>/execute\u003C/code> command, which starts the wget command which in turn sends a post request to ntfy.sh. Make sure you set the ntfy topic (the part after \u003Ccode>https://ntfy.sh/\u003C/code>) to something private and long enough so that nobody else is going to guess it by accident.\u003C/li>\n\u003C/ul>\n\u003Cp>Don't forget to subscribe to the ntfy topic on your phone or whatever device you want to receive the notification on.\u003C/p>\n\u003Cp>The possibilities with the trigger plugin are endless, I hope this inspires you to build your own customizations using weechat.\u003C/p>","blog/2023-03-28-weechat-notification-ntfy","ef51e944-86fa-44b0-ab9d-be7f8d8e569a",["Date","2023-03-28T10:05:19.000Z"],["Date","2023-01-15T20:35:40.643Z"],[9],null,"Weechat Notifications with ntfy.sh",true,"Using the weechat trigger plugin to notify yourself about new private messages and mentions through the ntfy.sh notification service.","https://media.tiim.ch/97833b1d-d602-4d9a-9689-3077e96e45ba.webp","stable diffusion - Anything V3.0 - boy using an old DOS computer, 90s vibes, muted pastel colors, stylized, thick lines, IRC, console",[16,17,18,19],"weechat","ntfy.sh","wget","irc","\u003Cp>In one of my last blog posts I \u003Ca href=\"https://tiim.ch/blog/2023-01-15-weechat-docker\">set up WeeChat in docker\u003C/a>, which works mostly pretty great for me so far. Although, it started to bug me that I felt the need to regularly check IRC in case I missed someone potentially tagging or private-messaging me. While looking around at how I could be notified on mentions and private messages, I found the \u003Ca href=\"https://weechat.org/files/doc/stable/weechat_user.en.html#trigger\">trigger plugin\u003C/a>. A powerful plugin that comes pre-installed on WeeChat. It lets the user specify a WeeChat command that will be executed when a specific event occurs. This plugin is probably powerful enough to build a small IRC bot, directly in WeeChat.\u003C/p>",[19,17,16,18],"article","blog",[25],{"id":26,"type":27,"replyTo":28,"timestamp":29,"page":4,"url":30,"content":31,"name":32},"75c3d466-b64e-4899-a830-8304af377ec7","comment","","2024-01-20T09:36:14Z","https://tiim.ch/blog/2023-03-28-weechat-notification-ntfy#75c3d466-b64e-4899-a830-8304af377ec7","Found this when searching for \"weechat ntfy\" in Github, simple and works great, thanks for sharing! There is a typo in the first command (a lot of extra spaces in \"-                   -header\"), thought I'd let you know ;)","Vilkku",{"html":34,"slug":35,"uuid":36,"date":37,"created":38,"aliases":39,"title":40,"published":11,"modified":41,"description":42,"cover_image":43,"cover_image_txt":44,"content_tags":45,"abstract":47,"tags":48,"links":-1,"type":22,"folder":23,"comments":49,"latestComment":29},"\u003Cp>I have recently gotten interested in IRC for some reason and have been looking for a client that I like. I have used \u003Ca href=\"https://hexchat.github.io/\" rel=\"nofollow noopener noreferrer\">HexChat\u003C/a> in the past, but I don't really fancy having yet another communications program running on my PC next to discord, zoom, telegram and thunderbird. I have been trying to use the IRC feature of thunderbird, but even though it works, it feels very much like an afterthought.\u003C/p>\n\u003Cp>The one client I have seen mentioned a lot is \u003Ca href=\"https://weechat.org/\" rel=\"nofollow noopener noreferrer\">WeeChat\u003C/a> (not to be confused with WeChat, the Chinese instant messenger). WeeChat runs in the terminal as a \u003Ca href=\"https://en.wikipedia.org/wiki/Text-based_user_interface\" rel=\"nofollow noopener noreferrer\">TUI\u003C/a> and after a while of getting used to (and after enabling 'mouse mode') it seems intuitive enough.\u003C/p>\n\u003Cp>The nice thing about WeeChat running not as a graphical application, is that it makes it possible to run on a server and access it from anywhere over ssh.\u003C/p>\n\u003Cblockquote class=\"callout callout-info\">\n\u003Cspan class=\"callout-title\">\u003Cspan class=\"callout-icon\">\u003Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\u003Cpath d=\"M256 512c141.4 0 256-114.6 256-256S397.4 0 256 0 0 114.6 0 256s114.6 256 256 256zm-40-176h24v-64h-24c-13.3 0-24-10.7-24-24s10.7-24 24-24h48c13.3 0 24 10.7 24 24v88h8c13.3 0 24 10.7 24 24s-10.7 24-24 24h-80c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-144c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\">\u003C/path>\u003C/svg>\u003C/span>INFO\u003C/span>\u003Cp>Except on mobile devices, but weechat has mobile apps that can connect to it directly.\u003C/p>\n\u003C/blockquote>\n\u003Cp>Since I pretty much host all my selfhosted software in docker on a VPS, I was looking if someone already published a docker image for WeeChat. There is a bunch of them, but only \u003Ca href=\"https://hub.docker.com/r/weechat/weechat\" rel=\"nofollow noopener noreferrer\">weechat/weechat\u003C/a> (the official image) is still updated regularly. The docker hub page does not have any documentation, but I managed to find it in the \u003Ca href=\"https://github.com/weechat/weechat-container\" rel=\"nofollow noopener noreferrer\">weechat/weechat-container\u003C/a> github repo.\u003C/p>\n\u003Cp>As it says in the readme on github, you can start the container with\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">docker run -it weechat/weechat\n\u003C/code>\u003C/pre>\n\u003Cp>which will run weechat directly in the foreground.\u003C/p>\n\u003Cblockquote class=\"callout callout-info\">\n\u003Cspan class=\"callout-title\">\u003Cspan class=\"callout-icon\">\u003Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\u003Cpath d=\"M256 512c141.4 0 256-114.6 256-256S397.4 0 256 0 0 114.6 0 256s114.6 256 256 256zm-40-176h24v-64h-24c-13.3 0-24-10.7-24-24s10.7-24 24-24h48c13.3 0 24 10.7 24 24v88h8c13.3 0 24 10.7 24 24s-10.7 24-24 24h-80c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-144c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\">\u003C/path>\u003C/svg>\u003C/span>Info\u003C/span>\u003Cp>Don't skip the \u003Ccode>-it\u003C/code> command line flags. The \u003Ccode>-i\u003C/code> or \u003Ccode>--interactive\u003C/code> keeps stdin open, which is required to send input to weechat. Weechat also closes immediately if the stdin gets closed, which took me a while to figure out.\nThe \u003Ccode>-t\u003C/code> or \u003Ccode>--tty\u003C/code> flag is required to provide a fake tty to the container. I don't really understand what that means but without this you won't see the user interface of weechat.\u003C/p>\n\u003C/blockquote>\n\u003Cp>Running in the foreground is not really that helpful if we want to run weechat on a server, so we need to detach (let it run in the background) from the container with the \u003Ccode>-d\u003C/code> or \u003Ccode>--detach\u003C/code> flag. It also helps to specify a name for the container with the \u003Ccode>--name &#x3C;name>\u003C/code> argument, so we can quickly find the container again later. The docker command now looks like this:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">docker run -it -d --name weechat weechat/weechat\n\u003C/code>\u003C/pre>\n\u003Cp>When we run this command, we will notice that weechat is running in the background. To access it we can run \u003Ccode>docker attach weechat\u003C/code>. To detach from weechat without exiting the container, we can press \u003Ccode>CTRL-p CTRL-q\u003C/code> as described in the \u003Ca href=\"https://docs.docker.com/engine/reference/commandline/attach/#description\" rel=\"nofollow noopener noreferrer\">docker attach reference\u003C/a>\u003C/p>\n\u003Cp>I noticed that there are two versions of the weechat image: a debian version and an alpine linux version. Generally the Alpine Linux versions of containers are smaller than the Debian versions, so I decided to use the alpine version: \u003Ccode>weechat/weechat:latest-alpine\u003C/code>.\u003C/p>\n\u003Cp>With this we are practically done, but if we ever remove and restart the container, all of the chat logs and customisations to weechat will be gone. To prevent this we need to add the config and log files to a volume.\u003C/p>\n\u003Cp>I generally use the folder \u003Ccode>~/docker/(service)\u003C/code> to point my docker volumes to, so I have a convenient place to inspect, modify and back up the data.\u003C/p>\n\u003Cp>Let's create the folder and add the volume to the docker container. I also added the \u003Ccode>--restart unless-stopped\u003C/code> flag to make sure the container gets restarted if it either exits for some reason of if docker restarts.\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">mkdir -p ~/docker/weechat/data\nmkdir -p ~/docker/weechat/config\n\ndocker run -it -d --restart unless-stopped \\\n    -v \"~/docker/weechat/data:/home/user/.weechat\" \\\n    -v \"~/docker/weechat/config:/home/user/.config/weechat\" \\\n    --name weechat weechat/weechat:latest-alpine`\n\u003C/code>\u003C/pre>\n\u003Cp>Running this command on the server is all we need to have weechat running in docker.\u003C/p>\n\u003Cblockquote>\n\u003Cp>But how do I quickly connect to weechat? Do I always have to first ssh into the server and then run docker attach?\u003C/p>\n\u003C/blockquote>\n\u003Cp>Yes but, as almost always, we can simplify this with a bash script:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-bash\">#!/usr/bin/env bash\n\nHOST=&#x3C;ssh host>\nssh -t \"${HOST}\" docker attach weechat\n\u003C/code>\u003C/pre>\n\u003Cp>This bash script starts ssh with the \u003Ccode>-t\u003C/code> flag which tells ssh that the command is interactive.\nCopy this script into your \u003Ccode>~/.local/bin\u003C/code> folder and make it executable.\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">nano ~/.local/bin/weechat.sh\nchmod +x weechat.sh\n\u003C/code>\u003C/pre>\n\u003Cp>And that's it! Running \u003Ccode>weechat.sh\u003C/code> will open an ssh session to your server and attach to the weechat container. Happy Chatting!\u003C/p>\n\u003Cp>If you liked this post, consider subscribing to my blog via \u003Ca href=\"https://tiim.ch/blog/rss.xml\" rel=\"nofollow noopener noreferrer\">RSS\u003C/a>, or on \u003Ca href=\"https://tiim.ch/follow\" rel=\"nofollow noopener noreferrer\">social media\u003C/a>. If you have any questions, feel free to \u003Ca href=\"https://tiim.ch/contact\" rel=\"nofollow noopener noreferrer\">contact me\u003C/a>. I also usually hang out in \u003Ca href=\"irc://irc.libera.chat/##tiim\">\u003Ccode>##tiim\u003C/code> on irc.libera.chat\u003C/a>. My name on IRC is \u003Ccode>tiim\u003C/code>.\u003C/p>\n\u003Cblockquote class=\"callout callout-info\">\n\u003Cspan class=\"callout-title\">\u003Cspan class=\"callout-icon\">\u003Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\u003Cpath d=\"M256 512c141.4 0 256-114.6 256-256S397.4 0 256 0 0 114.6 0 256s114.6 256 256 256zm-40-176h24v-64h-24c-13.3 0-24-10.7-24-24s10.7-24 24-24h48c13.3 0 24 10.7 24 24v88h8c13.3 0 24 10.7 24 24s-10.7 24-24 24h-80c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-144c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\">\u003C/path>\u003C/svg>\u003C/span>Update 2022-01-18\u003C/span>\u003Cp>I have found that at the beginning of a session, the input to weechat doesn't seem to work. Sometimes weechat refuses to let me type anything and/or doesn't recognize mouse events.\nAfter a while of spamming keys and \u003Ccode>Alt-m\u003C/code> (toggle mouse mode), it seems to fix itself most of the time.\nI have no idea if thats a problem with weechat, with docker or with ssh, and so far have not found a solution for this. If you have the same problem or even know how to fix it, feel free to reach out.\u003C/p>\n\u003C/blockquote>","blog/2023-01-15-weechat-docker","889ff4db-3ccb-4ab1-9676-a2b0ea8f19eb",["Date","2023-01-15T00:00:00.000Z"],["Date","2023-01-15T00:17:07.000Z"],[9],"Running the WeeChat IRC Client on a VPS in Docker",["Date","2023-01-18T11:34:27.000Z"],"Walkthrough on how to setup the WeeChat IRC client in docker.","https://media.tiim.ch/a28c65a1-ed95-43d3-af87-a2ad222bee7f.jpg","Stable Diffusion - anime landscape, pastel colors, thick outlines, forest, mountains, golden light",[19,16,46],"docker","\u003Cp>I have recently gotten interested in IRC for some reason and have been looking for a client that I like. I have used \u003Ca href=\"https://hexchat.github.io/\">HexChat\u003C/a> in the past, but I don't really fancy having yet another communications program running on my PC next to discord, zoom, telegram and thunderbird. I have been trying to use the IRC feature of thunderbird, but even though it works, it feels very much like an afterthought.\u003C/p>",[46,19,16],[50,56,61,66],{"id":51,"type":52,"replyTo":28,"timestamp":53,"page":35,"url":54,"content":12,"name":55},"52b7b3e6-e233-4379-8f0c-3332aed562a6","webmention","2023-03-28T10:10:56Z","https://tiim.ch/blog/2023-03-28-weechat-notification-ntfy","Tim Bachmann",{"id":57,"type":52,"replyTo":28,"timestamp":58,"page":35,"url":59,"content":28,"name":60},"f6f58ebf-a68f-415e-baed-cb8bf38189fd","2023-03-02T00:05:49Z","https://brid.gy/like/twitter/tiimb/1614403118258601987/1557313575072546816","DM Cyber Security",{"id":62,"type":52,"replyTo":28,"timestamp":63,"page":35,"url":64,"content":28,"name":65},"45d40e9f-6498-4432-bdb0-01210e55d092","2023-01-25T18:20:43Z","https://brid.gy/like/twitter/tiimb/1614403118258601987/8717982","Christopher Scott",{"id":67,"type":52,"replyTo":28,"timestamp":68,"page":35,"url":69,"content":70,"name":71},"979c42d0-a8fc-4a52-a85d-bedb672fb144","2023-01-25T09:22:51Z","https://brid.gy/repost/twitter/tiimb/1614403118258601987/1618133427139792898","New blog post: A walkthrough on how to set up the WeeChat IRC client in docker. #irc #docker @WeeChatClient\ntiim.ch/blog/2023-01-1…","WeeChat",{"tag":19}],"uses":{"params":["slug"]}}]}
