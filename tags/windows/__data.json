{"type":"data","nodes":[{"type":"data","data":[{"footer":1},{"html":2,"slug":3,"uuid":4,"created":5,"date":6,"published":7,"abstract":8,"tags":9,"links":-1,"type":10,"cover_image":-1,"description":11,"folder":12},"\u003Cp>Built with SvelteKit and hosted on GitHub Pages.\u003C/p>\n\u003Cp>View this website on \u003Ca href=\"https://github.com/Tiim/Tiim.github.io\" rel=\"nofollow noopener noreferrer\">GitHub\u003C/a>!\u003C/p>\n\u003Ch2>Other pages\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://tiim.ch/pages/links\" rel=\"nofollow noopener noreferrer\">Links and Blogroll\u003C/a>\u003C/li>\n\u003C/ul>","footer","e556fd14-3acd-4a7b-9b31-929fdd6d2b7a",["Date","2023-07-31T20:16:19.000Z"],["Date","2023-07-31T20:16:19.000Z"],true,"\u003Cp>Built with SvelteKit and hosted on GitHub Pages.\u003C/p>",[],"article","","metadata"],"uses":{}},{"type":"data","data":[{"posts":1,"details":60},[2,44],{"html":3,"slug":4,"uuid":5,"title":6,"published":7,"date":8,"description":9,"cover_image":10,"content_tags":11,"abstract":16,"tags":17,"links":-1,"type":21,"folder":22,"comments":23,"latestComment":43},"\u003Cp>There \u003Ca href=\"https://gist.github.com/dentechy/de2be62b55cfd234681921d5a8b6be11\" rel=\"nofollow noopener noreferrer\">are\u003C/a> \u003Ca href=\"https://medium.com/@thinkbynumbers/automatically-start-wsl-ssh-and-various-services-on-windows-845dfda89690\" rel=\"nofollow noopener noreferrer\">many\u003C/a> \u003Ca href=\"https://faun.pub/how-to-setup-ssh-connection-on-ubuntu-windows-subsystem-for-linux-2b36afb943dc\" rel=\"nofollow noopener noreferrer\">guides\u003C/a> on the \u003Ca href=\"https://superuser.com/questions/1112007/how-to-run-ubuntu-service-on-windows-at-startup\" rel=\"nofollow noopener noreferrer\">internet\u003C/a> showing how to set up an SSH server \u003Cstrong>inside\u003C/strong> WSL. This is currently not that easy and in my experience, it is not really stable. An alternative to this is to run the SSH server outside of WSL on the windows side and set its default shell to the WSL shell (or any other shell for that matter).\u003C/p>\n\u003Ch2>Installing the OpenSSH Server\u003C/h2>\n\u003Cp>Windows has been shipping with an OpenSSH client and server for a long time. They are not installed by default but can be activated either in the settings as described \u003Ca href=\"https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse\" rel=\"nofollow noopener noreferrer\">in the official docs\u003C/a> or with the following PowerShell commands.\u003C/p>\n\u003Cp>\u003Cstrong>You will need to start PowerShell as Administrator\u003C/strong>\u003C/p>\n\u003Cp>First, install the OpenSSH client and server.\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-PowerShell\">Add-WindowsCapability -Online -Name OpenSSH.Client~~~~0.0.1.0\nAdd-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0\n\u003C/code>\u003C/pre>\n\u003Cp>Enable the SSH service and make sure the firewall rule is configured:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-PowerShell\"># Enable the service\nStart-Service sshd\nSet-Service -Name sshd -StartupType 'Automatic'\n\n# Confirm the firewall rule is configured. It should be created automatically by setup. Run the following to verify\nif (!(Get-NetFirewallRule -Name \"OpenSSH-Server-In-TCP\" -ErrorAction SilentlyContinue | Select-Object Name, Enabled)) {\n    Write-Output \"Firewall Rule 'OpenSSH-Server-In-TCP' does not exist, creating it...\"\n    New-NetFirewallRule -Name 'OpenSSH-Server-In-TCP' -DisplayName 'OpenSSH Server (sshd)' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22\n} else {\n    Write-Output \"Firewall rule 'OpenSSH-Server-In-TCP' has been created and exists.\"\n}\n\u003C/code>\u003C/pre>\n\u003Cp>Congratulations, you have installed the SSH server on your Windows machine. And all without manually setting up a background service or modifying config files.\u003C/p>\n\u003Ch2>Setting WSL as Default Shell\u003C/h2>\n\u003Cp>To directly boot into WSL when connecting, we need to change the default shell from \u003Ccode>cmd.exe\u003C/code> or \u003Ccode>PowerShell.exe\u003C/code> to \u003Ccode>bash.exe\u003C/code>, which in turn runs the default WSL distribution. This can be done with the PowerShell command:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-PowerShell\">New-ItemProperty -Path \"HKLM:\\SOFTWARE\\OpenSSH\" -Name DefaultShell -Value \"C:\\WINDOWS\\System32\\bash.exe\" -PropertyType String -Force\n\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>Note\u003C/strong>: even though the shell is running on the Linux side, the SSH server is still on windows. This means you have to use to windows username to log in, and the SCP command copies files relative to the user directory on windows.\u003C/p>\n\u003Ch2>Enable Key-based Authentication (non-Admin User)\u003C/h2>\n\u003Cp>\u003Cstrong>Note\u003C/strong>: If the user account has Admin permissions, read the next chapter, otherwise continue reading.\u003C/p>\n\u003Cp>Create the folder \u003Ccode>.ssh\u003C/code> in the users home directory on windows: (e.g. \u003Ccode>C:\\Users\\&#x3C;username>\\.ssh\u003C/code>). Run the following commands in PowerShell (not as administrator).\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-PowerShell\">New-Item -Path ~\\.ssh -ItmeType \"directory\"\nNew-Item -Path ~\\.ssh\\authorized_keys\n\u003C/code>\u003C/pre>\n\u003Cp>The file \u003Ccode>.ssh\\autzorized_keys\u003C/code> will contain a list of all public keys that shall be allowed to connect to the SSH server.\u003C/p>\n\u003Cp>Copy the contents of your public key file (usually stored in \u003Ccode>~/.ssh/id_rsa.pub\u003C/code>) to the \u003Ccode>authorized_keys\u003C/code> file. If a key is already present, paste your key on a new line.\u003C/p>\n\u003Ch2>Enable Key-based Authentication (Admin User)\u003C/h2>\n\u003Cp>If the user is in the Administrators group, it is not possible to have the \u003Ccode>authorized_keys\u003C/code> file in the user directory for security purposes.\nInstead, it needs to be located on the following path \u003Ccode>%ProgramData%\\ssh\\administrators_authorized_keys\u003C/code>. A second requirement is that it is only accessible to Administrator users, to prevent a normal user from gaining admin permissions.\u003C/p>\n\u003Cp>To create the file start PowerShell as administrator and run the following command.\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-PowerShell\">New-Item -Path $env:programdata\\ssh\\administrators_authorized_keys\n\u003C/code>\u003C/pre>\n\u003Cp>This will create the file with the correct permissions. Now open the file and paste your public key into it. The public key should be located at \u003Ccode>~/.ssh/id_rsa.pub\u003C/code>. If a key is already present, paste your key on a new line.\u003C/p>\n\u003Ch2>Verifying everything works\u003C/h2>\n\u003Cp>Verify that you can SSH into your machine by running the following inside WSL:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">IP=$(cat /etc/resolv.conf | grep nameserver | cut -d \" \" -f2) # get the windows host ip address\nssh &#x3C;user>@$IP\n\u003C/code>\u003C/pre>\n\u003Cp>Or from PowerShell and cmd:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-PowerShell\">ssh &#x3C;user>@localhost\n\u003C/code>\u003C/pre>\n\u003Ch2>Drawbacks\u003C/h2>\n\u003Cp>There are some drawbacks to this approach. If you rely on some programs or scripts to work over SSH, this might not be the method for you. Most scripts expect a unix machine on the other end, or if they expect a windows machine they will most likely not be configured to deal with WSL.\u003C/p>\n\u003Cp>If you however just want to connect to your pc to copy some files or change some settings this approach is perfectly fine.\u003C/p>","blog/2022-03-ssh-windows-wsl","03b5a86c-5f4d-4086-9f5f-e1e46b4bcf58","How to set up an SSH Server on Windows with WSL",true,["Date","2022-03-02T00:00:00.000Z"],"It can be very helpful to be able to connect to your laptop or desktop PC from anywhere using SSH. I will show you how to easily set this up on Windows with WSL.","/assets/2022-03-ssh-windows-wsl.png",[12,13,14,15],"SSH","WSL","Windows","dev","\u003Cp>There \u003Ca href=\"https://gist.github.com/dentechy/de2be62b55cfd234681921d5a8b6be11\">are\u003C/a> \u003Ca href=\"https://medium.com/@thinkbynumbers/automatically-start-wsl-ssh-and-various-services-on-windows-845dfda89690\">many\u003C/a> \u003Ca href=\"https://faun.pub/how-to-setup-ssh-connection-on-ubuntu-windows-subsystem-for-linux-2b36afb943dc\">guides\u003C/a> on the \u003Ca href=\"https://superuser.com/questions/1112007/how-to-run-ubuntu-service-on-windows-at-startup\">internet\u003C/a> showing how to set up an SSH server \u003Cstrong>inside\u003C/strong> WSL. This is currently not that easy and in my experience, it is not really stable. An alternative to this is to run the SSH server outside of WSL on the windows side and set its default shell to the WSL shell (or any other shell for that matter).\u003C/p>",[15,18,19,20],"ssh","windows","wsl","article","blog",[24,32,38],{"id":25,"type":26,"replyTo":27,"timestamp":28,"page":4,"url":29,"content":30,"name":31},"20f2c526-7466-4c21-83ac-51750f278328","comment","f7c1891b-e97b-4030-863e-19344ed84d32","2022-09-20T14:59:17Z","https://tiim.ch/blog/2022-03-ssh-windows-wsl#20f2c526-7466-4c21-83ac-51750f278328","Hi Tim, no problem. I had this error in \"Event Viewer > Applications and Services Logs > OpenSSH > Admin\" and figure it out that sshd seems to search the Administrators groups to operate, literal name and not properly localized by region.\n\nerroid:2 user:SYSTEM details:\"sshd: error: unable to resolve group administrators\"\n\nMaybe is not all the non-english windows with this problem, but I have it but after created the group works like a charm.","",{"id":27,"type":26,"replyTo":33,"timestamp":34,"page":4,"url":35,"content":36,"name":37},"5de01bc5-b7c7-4522-9dfe-c67f103d4c03","2022-09-20T12:58:29Z","https://tiim.ch/blog/2022-03-ssh-windows-wsl#f7c1891b-e97b-4030-863e-19344ed84d32","Hi FinderX\n\nThanks for the heads up. I don't remember having to create a new user group, even though my system language is German. Maybe I just forgot about that though.","Tim",{"id":33,"type":26,"replyTo":31,"timestamp":39,"page":4,"url":40,"content":41,"name":42},"2022-09-20T07:50:46Z","https://tiim.ch/blog/2022-03-ssh-windows-wsl#5de01bc5-b7c7-4522-9dfe-c67f103d4c03","Hi!\nI add some roundabouts about admin-users, if your windows ssh server system language is NOT english, you must create 'Administrators' group (without quotes) in your language equivalent of \"Users and Local Groups > Groups\", if your server is a DC (Domain Controller) create it in your language equivalent of \"Active Directories Users and Computers\".\n\nCreate the user group with name Administrators, description whatever, ex. \"Dummy group for sshd to work correctly.\", and in Members add your language equivalent of the user Administrator.\n\nThis is optional but I suggest you change these settings in \"%programdata%\\ssh\\sshd_config\" after you successfully copy your public key to the ssh server :\n\nStrictModes yes\nPubkeyAuthentication yes\nPasswordAuthentication no\n\nYou can see the log activity in your language equivalent of \"Applications and Services Logs > OpenSSH > Admin or Operational\"\n\nBest Regards.","FinderX","2024-01-20T09:36:14Z",{"html":45,"slug":46,"uuid":47,"title":48,"published":7,"date":49,"description":50,"cover_image":51,"content_tags":52,"abstract":57,"tags":58,"links":-1,"type":21,"folder":22,"comments":59,"latestComment":43},"\u003Cp>Did you ever want to listen to your phone audio on your PC? I do it all the time to listen to podcasts on my PC without paying for a podcast app that syncs the episodes over the cloud. In this short article I will show you two easy ways to do this with a windows PC.\u003C/p>\n\u003Cp>\u003Cem>TLDR\u003C/em>:\u003C/p>\n\u003Cul>\n\u003Cli>Either use Bluetooth Audio Receiver from the Microsoft Store to connect you phone via Bluetooth,\u003C/li>\n\u003Cli>Or use an audio cable to connect the phone to the \"line-in\" on your PC.\u003C/li>\n\u003C/ul>\n\u003Ch2>Bluetooth (recommended)\u003C/h2>\n\u003Cp>\u003Cstrong>Requirements\u003C/strong>: A PC with integrated Bluetooth or a Bluetooth dongle.\u003C/p>\n\u003Cp>I recommend this approach more than the wired one because it is way less effort, you don't have to deal with a USB or lightning to audio dongle and in my opinion it is more reliable.\u003C/p>\n\u003Cp>Pair your phone with your PC as normal, by opening the Bluetooth settings on your phone and on the PC and wait for the devices to show up. When you successfully paired the phone once you will not have to do this again. Now you need an app that will tell the phone that it can use the PC as a wireless speaker. The only app I found that will do this is the \u003Ca href=\"https://www.microsoft.com/de-de/p/bluetooth-audio-receiver/9n9wclwdqs5j\" rel=\"nofollow noopener noreferrer\">Bluetooth Audio Receiver\u003C/a> app from the Windows Store. Install and and open it. You should see your phone on the list of Bluetooth devices on the app. Select it and click on the \u003Ccode>Open Connection\u003C/code> button. It might take a moment but after it connected, you should hear all sounds from your phone on your PC.\u003C/p>\n\u003Ch2>Wired\u003C/h2>\n\u003Cp>\u003Cstrong>Requirements\u003C/strong>:\u003C/p>\n\u003Cul>\n\u003Cli>Male-to-Male audio cable (3.5mm audio jack).\u003C/li>\n\u003Cli>A line-in port on your PC (usually blue audio jack on the back)\u003C/li>\n\u003Cli>USB-C to audio jack adapter (Optional)\u003C/li>\n\u003Cli>Lighting to audio jack adapter (Optional)\u003C/li>\n\u003C/ul>\n\u003Cp>This approach works if your PC doesn't support Bluetooth, or if the Bluetooth connection drops for some reason. Connect the audio cable to the blue line-in jack on the back of the computer. Then, connect the phone to the other end of the audio cable. If your phone does not have an audio jack, use the adapter on the USB-C or Lightning port. If your PC detects that you connected a new line-in device, it might open the audio settings automatically. If not, right-click on the volume icon on the taskbar next to the clock and select \u003Ccode>Sounds\u003C/code>. Navigate to the \u003Ccode>Input\u003C/code> tab and double click on the Line-In entry (the one with a cable icon). Navigate to the Monitor tab and select the check box for \"Use this device as a playback source\". This will tell windows it should play all sounds received through this input directly to the speakers. Usually this is used to monitor microphones but it works for this use case too. You should now hear any sound from your phone through your PC headphones or speakers. Make sure you turn this checkbox off when you disconnect your phone. Otherwise you might hear a crackle or other sounds when the loose cable gets touched.\u003C/p>\n\u003Cp>\u003Cem>Photo by Lisa Fotios from Pexels\u003C/em>\u003C/p>","blog/2022-02-phone-audio-to-pc","be57f2df-d58f-4b79-8a51-e20d482f46cf","How to Listen to Phone Audio on PC",["Date","2022-02-12T00:00:00.000Z"],"Learn how to connect your phone audio to your PC over wire or Bluetooth.","/assets/2022-02-phone-audio-to-pc.jpg",[53,54,19,55,56],"how-to","audio","bluetooth","software","\u003Cp>Did you ever want to listen to your phone audio on your PC? I do it all the time to listen to podcasts on my PC without paying for a podcast app that syncs the episodes over the cloud. In this short article I will show you two easy ways to do this with a windows PC.\u003C/p>",[54,55,53,56,19],[],{"tag":19}],"uses":{"params":["slug"]}}]}
