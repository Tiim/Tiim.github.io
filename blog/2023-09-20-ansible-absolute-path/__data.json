{"type":"data","nodes":[{"type":"data","data":[{"footer":1},{"html":2,"slug":3,"uuid":4,"created":5,"date":6,"published":7,"abstract":8,"tags":9,"links":-1,"type":10,"cover_image":-1,"description":11,"folder":12},"\u003Cp>Built with SvelteKit and hosted on GitHub Pages.\u003C/p>\n\u003Cp>View this website on \u003Ca href=\"https://github.com/Tiim/Tiim.github.io\" rel=\"nofollow noopener noreferrer\">GitHub\u003C/a>!\u003C/p>\n\u003Ch2>Other pages\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://tiim.ch/pages/links\" rel=\"nofollow noopener noreferrer\">Links and Blogroll\u003C/a>\u003C/li>\n\u003C/ul>","footer","e556fd14-3acd-4a7b-9b31-929fdd6d2b7a",["Date","2023-07-31T20:16:19.000Z"],["Date","2023-07-31T20:16:19.000Z"],true,"\u003Cp>Built with SvelteKit and hosted on GitHub Pages.\u003C/p>",[],"article","","metadata"],"uses":{}},{"type":"data","data":[{"post":1,"about":24},{"html":2,"slug":3,"uuid":4,"date":5,"created":6,"aliases":7,"title":8,"published":9,"modified":7,"description":10,"cover_image":11,"cover_image_txt":12,"content_tags":13,"abstract":18,"tags":19,"links":-1,"type":20,"folder":21,"comments":22,"latestComment":23},"\u003Cp>I recently had to find a way to delete a folder using Ansible that was being created by Docker. The folder had a path like \u003Ccode>~/docker/myservice\u003C/code>. Since docker had created it as part of a volume, the folder did not belong to the current user. So deleting the folder using normal permissions failed.\u003C/p>\n\u003Cp>Deleting with elevated permission on the command line is easy: The command \u003Ccode>sudo rm -rf ~/docker/myservice\u003C/code> performs the \u003Ccode>rm\u003C/code> operation as the root user. In bash, this will delete the \u003Ccode>docker/myservice\u003C/code> folder in the user's home directory, but when doing the equivalent in Ansible, this won't work!\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-yaml\"># This does not work!\n- name: Delete the folder using root permissions\n  become: true\n  ansible.builtin.file:\n    path: \"~/docker/myservice\"\n    state: \"absent\"\n\u003C/code>\u003C/pre>\n\u003Cp>This code will try to delete the file \u003Ccode>/user/root/docker/myservice\u003C/code>, which is not what we wanted.\u003C/p>\n\u003Cp>The bash version works because the shell first resolves the tilde in the argument to the current users' directory before calling the sudo command. In Ansible, we first switch to the root user and only then the tilde is resolved: this time to the home directory of the root user.\u003C/p>\n\u003Cp>To circumvent this, we can manually resolve the path to an absolute path. Unfortunately, I have not found a straightforward way to do this in Ansible, however the bash command \u003Ccode>readlink -f &#x3C;path>\u003C/code> does exactly this. To use it in Ansible, we can use the following configuration:\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-yaml\">- name: Get absolute folder path\n  ansible.builtin.command:\n    cmd: \"readlink -f ~/docker/myservice\"\n  register: folder_abs\n  changed_when: False\n\n- name: Debug\n  debug:\n    msg: \"{{folder_abs.stdout}}\" # prints /user/tim/docker/myservice\n\n- name: Delete the folder using root permissions\n  become: true\n  ansible.builtin.file:\n    path: \"{{folder_abs.stdout}}\"\n    state: \"absent\"\n\u003C/code>\u003C/pre>\n\u003Cp>With this Ansible script, we manually resolve the absolute path and use it to delete the folder using root permissions. If you know of an easier way to resolve to an absolute path, please let me know!\u003C/p>","blog/2023-09-20-ansible-absolute-path","ad58acaf-56b0-4bcf-9b72-d6c054fc48d4",["Date","2023-09-20T21:39:13.000Z"],["Date","2023-09-20T20:22:35.634Z"],null,"Getting the Absolute Path of a Remote Directory in Ansible",true,"There is no builtin way to convert a relative path to an absolute path in ansible. However we can use the readlink command for this.","https://media.tiim.ch/3c1246e4-3201-4df6-af87-6aa4ab98800e.webp","(stable doodle) server room, neon, cables",[14,15,16,17],"dev","ansible","linux","bash","\u003Cp>I recently had to find a way to delete a folder using Ansible that was being created by Docker. The folder had a path like \u003Ccode>~/docker/myservice\u003C/code>. Since docker had created it as part of a volume, the folder did not belong to the current user. So deleting the folder using normal permissions failed.\u003C/p>",[15,17,14,16],"article","blog",[],"2024-01-20T09:36:14Z",{"html":25,"slug":26,"uuid":27,"date":28,"created":29,"published":9,"abstract":30,"tags":31,"links":-1,"type":20,"cover_image":-1,"description":32,"folder":33},"\u003Cp>Hi, my name is \u003Cspan class=\"p-name\">Tim Bachmann\u003C/span>!\nI'm a \u003Cspan class=\"p-role\">master graduate in computer science\u003C/span> at \u003Cspan class=\"p-org\">University of Basel\u003C/span>, swimmer and swim coach.\u003C/p>\n\u003Cp>I am passionate about all things web development, swimming, personal knowledge management and much more.\nIf you liked this or any of my posts, feel free to \u003Ca href=\"https://tiim.ch/follow\" rel=\"nofollow noopener noreferrer\">follow me\u003C/a>.\u003C/p>","about","d8e56802-2847-4053-b213-9b004f1b965c",["Date","2022-10-15T00:00:00.000Z"],["Date","2022-10-15T19:47:09.652Z"],"\u003Cp>Hi, my name is {{name}}!\nI'm a {{role}} at {{org}}, swimmer and swim coach.\u003C/p>",[],"","metadata"],"uses":{"params":["slug"]}}]}
